[project]
name = "{{cookiecutter.project_slug}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.project_description}}"
readme = "README.md"
requires-python = ">={{cookiecutter.python_version}}"
dependencies = []

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.23.0",
    "pytest-timeout>=2.2.0",
    "pytest-socket>=0.7.0",
    "ruff>=0.3.0",
    "pyright>=1.1.350",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--cov={{cookiecutter.project_slug}}",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--tb=short",
]
# Global timeout (overridden by conftest.py based on test type)
timeout = 300
timeout_func_only = true
asyncio_mode = "auto"
# Markers
markers = [
    "check: marks tests as part of check suite (unit + integration + static)",
    "all: marks tests as part of all test suite",
    "static: marks tests as static analysis",
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
    "ruff: marks tests as ruff checks",
    "pyright: marks tests as pyright checks",
]

[tool.ruff]
target-version = "py{{cookiecutter.python_version.replace('.', '')}}"
line-length = 88
fix = true

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "SIM",  # flake8-simplify
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pyright]
include = ["src"]
exclude = ["**/__pycache__"]
pythonVersion = "{{cookiecutter.python_version}}"
typeCheckingMode = "strict"
reportMissingImports = true
reportMissingTypeStubs = false
reportMissingModuleSource = false
# Strict type checking
reportAny = "error"
reportImplicitStringConcatenation = "error"
reportImplicitOverride = "error"
reportPropertyTypeMismatch = "error"
reportUnnecessaryTypeIgnoreComment = "error"
reportUnusedImport = "error"
reportUnusedVariable = "error"